x-deploy: &deploy_config
  mode: replicated
  replicas: 1
  update_config:
    parallelism: 1
    order: start-first
    failure_action: rollback
    delay: 5s
  rollback_config:
    parallelism: 0
    order: stop-first
  restart_policy:
    condition: any
    delay: 5s
    max_attempts: 3
    window: 5s

services:
  nginx:
    image: nginx:stub_status
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/usr/local/nginx/conf/nginx.conf:ro
      - ./nginx/nginx_sites_available:/etc/nginx/sites-available/default:ro
      - nginx_logs:/var/log/nginx
    networks:
      - monitoring_swarm
    deploy: *deploy_config

  node_exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/host/root:ro
    networks:
      - monitoring_swarm
    deploy: *deploy_config

  nginx_prometheus_exporter:
    image: nginx/nginx-prometheus-exporter:1.2.0
    command: ["--nginx.scrape-uri", "http://nginx/nginx_status"]
    networks:
      - monitoring_swarm
    deploy: *deploy_config

  telegraf:
    image: telegraf:1.29.5
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - nginx_logs:/var/log/nginx:ro
    networks:
      - monitoring_swarm

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
    networks:
      - monitoring_swarm
    deploy: *deploy_config

  prometheus:
    image: prom/prometheus:v2.53.0
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.retention.time=7d"
      - "--storage.tsdb.retention.size=2GB"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - monitoring_swarm
    deploy: *deploy_config

  grafana:
    image: grafana/grafana:10.3.3
    ports:
      - "3456:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring_swarm
    deploy: *deploy_config

volumes:
  nginx_logs:
  grafana_data:
  prometheus_data:

networks:
  monitoring_swarm:
    driver: overlay
    ipam:
      config:
        - subnet: 10.0.3.0/24
